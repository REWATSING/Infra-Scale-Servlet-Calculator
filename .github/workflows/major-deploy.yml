name: Major Deployment - Build AMI & Deploy Infra

on:
  push:
    branches: [major-update]

permissions:
  contents: read
  packages: read
  id-token: write
  security-events: write

jobs:
  deploy-major:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml', '**/settings.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        working-directory: app-code
        run: mvn clean package

      - name: Setup SSH Private Key
        run: |
          echo "${{ secrets.PACKER_KEY }}" | sed 's/\\n/\n/g' > ~/ecdsakeypair.pem
          chmod 600 ~/ecdsakeypair.pem
          ls -la ~/ecdsakeypair.pem
          cat ~/ecdsakeypair.pem # Debug: Ensure key is properly stored

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Change if needed

      - name: Verify WAR File
        working-directory: app-code
        run: ls -l target/*.war || echo "WAR file not found!"

      - name: Upload WAR to S3
        working-directory: app-code
        run: |
          aws s3 cp target/*.war s3://${{ secrets.S3_BUCKET }}/java-servlet-calculator.war --acl private

      - name: Setup Packer              
        uses: hashicorp/setup-packer@v2
        with:
          packer_version: latest

      - name: Build AMI with Packer
        working-directory: ami-builder
        run: |
          packer init .
          packer build .

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Terraform Init
        working-directory: infra-deployment
        run: terraform init

      - name: Terraform Plan
        working-directory: infra-deployment
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        working-directory: infra-deployment
        run: terraform apply -auto-approve tfplan
