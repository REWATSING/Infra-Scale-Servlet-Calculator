name: Java CI CD pipeline with Maven Tomcat

on:
  push:
    branches:
      - main  # or any other branch you want to trigger the build

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package

      - name: Upload WAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: java-servlet-calculator
          path: target/*.war

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensures CI runs first

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download WAR Artifact from CI Build
        uses: actions/download-artifact@v4
        with:
          name: java-servlet-calculator
          path: target/

      - name: Verify Artifact Exists
        run: ls -l target/

      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # Disable strict host checking and known hosts
          echo -e "Host *\n  StrictHostKeyChecking no\n  UserKnownHostsFile /dev/null" > ~/.ssh/config
          
      # Verify SSH Agent and add the key
      - name: Add SSH Key to Agent
        run: |
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa
          # Debugging step to verify if the key is loaded
          ssh-add -l

      # Copy the WAR file to the Bastion host (First attempt)
      - name: Copy WAR to Bastion Host
        run: |
          echo "Attempting to copy WAR file to Bastion Host"
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no target/*.war ubuntu@${{ secrets.BASTION_PUBLIC_IP }}:/home/ubuntu/

      - name: Copy SSH key to Bastion Host
        run: |
          echo "Copying private key to Bastion Host"
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ~/.ssh/id_rsa ubuntu@${{ secrets.BASTION_PUBLIC_IP }}:/home/ubuntu/.ssh/id_rsa
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@${{ secrets.BASTION_PUBLIC_IP }} "chmod 600 /home/ubuntu/.ssh/id_rsa"

      - name: Add SSH key to Bastion Host agent
        run: |
          echo "Adding SSH key to Bastion Host SSH agent"
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@${{ secrets.BASTION_PUBLIC_IP }} << 'EOF'
            eval $(ssh-agent -s)
            ssh-add ~/.ssh/id_rsa
          EOF

      - name: Move WAR File via Bastion
        run: |
         ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -A ubuntu@${{ secrets.BASTION_PUBLIC_IP }} \
         "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@${{ secrets.PRIVATE_INSTANCE_IP }} \
         'sudo mv /home/ubuntu/*.war /var/lib/tomcat9/webapps/ && sudo chown tomcat:tomcat /var/lib/tomcat9/webapps/*.war && sudo chmod 644 /var/lib/tomcat9/webapps/*.war'"
          
              

      - name: Restart Tomcat on Private Instance
        run: |
          echo "Restarting Tomcat on Private Instance"
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@${{ secrets.BASTION_PUBLIC_IP }} << 'EOF'
            ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@${{ secrets.PRIVATE_INSTANCE_IP }} "sudo systemctl restart tomcat9"
          EOF
